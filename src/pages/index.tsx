import {
  Box,
  useColorMode,
  VStack,
  StackDivider,
  list,
  Divider,
  Show,
  Stack,
} from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import { Banner } from "./components/Banner";
import { TodoList } from "./components/TodoList";
import { AddTodo } from "./components/AddTodo";
import { Item } from "./types/item";
import { useState } from "react";
import Footer from "./components/Footer";
import Filtros from "./components/Filtros";
import { DragDropContext, Droppable, Draggable } from "react-beautiful-dnd";

const Home: NextPage = () => {
  const { colorMode, toggleColorMode } = useColorMode();

  const [list, setList] = useState<Item[]>([]);

  const handleAddTodo = (todoItem: string) => {
    let newTodo = [...list];
    newTodo.push({
      id: list.length + 1,
      text: todoItem,
      status: false,
    });
    setList(newTodo);
  };

  const deleteTask = (taskNameToDelete: string): void => {
    setList(
      list.filter((list) => {
        return list.text != taskNameToDelete;
      })
    );
  };

  return (
    <div>
      <Head>
        <title>Todo app</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap"
          rel="stylesheet"
        ></link>
      </Head>
      <main>
        {colorMode === "light" ? (
          <Banner bg={["bg-mobile-light.jpg", "bg-desktop-light.jpg"]} />
        ) : (
          <Banner bg={["bg-mobile-dark.jpg", "bg-desktop-dark.jpg"]} />
        )}
        <DragDropContext
          onDragEnd={(param) => {
            const srcI = param.source.index;
            const desI = param.destination?.index;
            if (desI) list.splice(desI, 0, list.splice(srcI, 1)[0]);
          }}
        >
          <Box>
            {colorMode === "light" ? (
              <VStack mt={["-20", "-170"]}>
                <AddTodo onEnter={handleAddTodo} />
                <VStack
                  align="stretch"
                  borderRadius="sm"
                  w={["80%", "50%"]}
                  bg={"#fafafa"}
                >
                  <Droppable droppableId="droppable-1">
                    {(provided, _) => (
                      <Stack divider={<StackDivider w={'100%'} borderWidth= "1px" borderColor="#d2d3db" />} ref={provided.innerRef} {...provided.droppableProps}>
                        {list.map((item, index) => (
                          <Draggable
                            key={item.id}
                            draggableId={"draggable-" + item.id}
                            index={index}
                          >
                            {(provided, _) => (
                              <div
                                ref={provided.innerRef}
                                {...provided.draggableProps}
                                {...provided.dragHandleProps}
                              >
                                <TodoList
                                  key={index}
                                  item={item}
                                  completeTask={deleteTask}
                                />
                              </div>
                            )}
                          </Draggable>
                        ))}
                      </Stack>
                    )}
                  </Droppable>
                  <Show  above='md'>
                  <Divider  borderWidth= "1px" borderColor="#d2d3db" />
                    <Filtros />
                  </Show>
                </VStack>
                <Show  below='md'>
                    <Filtros />
                  </Show>
                <Footer />
              </VStack>
            ) : (
              <VStack mt={["-20", "-170"]}>
                <AddTodo  onEnter={handleAddTodo} />
                <VStack
                  align="stretch"
                  divider={<StackDivider w='100%' borderColor="#4d5066" />}
                  borderRadius="sm"
                  w={["80%", "50%"]}
                  bg={"#25273c"}
                >
                  <Droppable droppableId="droppable-2">
                    {(provided, _) => (
                      <Stack divider={<StackDivider w={'100%'} borderWidth= "1px" borderColor="#4d5066" />} ref={provided.innerRef} {...provided.droppableProps}>
                        {list.map((item, index) => (
                          <Draggable
                            key={item.id}
                            draggableId={"draggable-" + item.id}
                            index={index}
                          >
                            {(provided, _) => (
                              <div
                                ref={provided.innerRef}
                                {...provided.draggableProps}
                                {...provided.dragHandleProps}
                              >
                                <TodoList
                                  key={index}
                                  item={item}
                                  completeTask={deleteTask}
                                />
                              </div>
                            )}
                          </Draggable>
                        ))}
                      </Stack>
                    )}
                  </Droppable>
                </VStack>
                <Filtros />
                <Footer />
              </VStack>
            )}
          </Box>
        </DragDropContext>
      </main>
    </div>
  );
};
export default Home;
